apiVersion: v1
kind: Secret
metadata:
  name: cloudflare-ddns-secret
{# stringData: {{ secrets.cloudflareDdns }} #}
stringData:
  ZONE_ID: "{{ zone_id }}"
  RECORD_ID: "{{ record_id }}"
  NAME: "{{ record_name }}"
  TYPE: A
  PROXIED: "{{ proxied }}"
  TTL: "{{ refresh_minutes * 60 }}"
  API_KEY: "{{ api_key }}"
  CHECK_IP: https://domains.google.com/checkip
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudflare-ddns-script-configmap
data:
  run.sh: |
    IP=$(curl $CHECK_IP)
    curl --request PUT --url https://api.cloudflare.com/client/v4/zones/$ZONE_ID/dns_records/$RECORD_ID \
      --header 'Content-Type: application/json' \
      --header "Authorization: Bearer $API_KEY" \
      --data "{
        \"content\": \"$IP\",
        \"name\": \"$NAME\",
        \"proxied\": $PROXIED,
        \"ttl\": $TTL,
        \"type\": \"$TYPE\"
      }"
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cloudflare-ddns-job
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 5
  successfulJobsHistoryLimit: 5
  startingDeadlineSeconds: 60
  schedule: "*/{{ refresh_minutes }} * * * *"
  jobTemplate:
    metadata:
      name: cloudflare-ddns-job
    spec:
      activeDeadlineSeconds: 240
      backoffLimit: 3
      template:
        metadata:
          name: cloudflare-ddns-job-pod
        spec:
          containers:
            - name: cloudflare-ddns-job-container
              image: fedora:36
              command: ["bash", "/scripts/run.sh"]
              envFrom:
                - secretRef:
                    name: cloudflare-ddns-secret
              volumeMounts:
                - name: script-volume
                  mountPath: /scripts
          volumes:
            - name: script-volume
              configMap:
                name: cloudflare-ddns-script-configmap
          restartPolicy: OnFailure
